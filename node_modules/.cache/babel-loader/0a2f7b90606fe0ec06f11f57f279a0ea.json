{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\fighting-game\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const canvas = document.querySelector('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = 1858;\n  canvas.height = 576;\n  context.fillRect(0, 0, 1024, 576);\n  const gravity = 0.7;\n\n  class Sprite {\n    constructor(_ref) {\n      let {\n        position,\n        velocity,\n        color = 'red',\n        offset\n      } = _ref;\n      this.position = position;\n      this.velocity = velocity;\n      this.width = 50;\n      this.height = 150;\n      this.lastKey = \"\";\n      this.attackBox = {\n        position: {\n          x: this.position.x,\n          y: this.position.y\n        },\n        offset,\n        width: 100,\n        height: 50\n      };\n      this.color = color;\n      this.isAttacking = '';\n    }\n\n    draw() {\n      context.fillStyle = this.color;\n      context.fillRect(this.position.x, this.position.y, this.width, this.height); //attack box\n\n      if (this.isAttacking) {\n        context.fillStyle = 'purple';\n        context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n      }\n    }\n\n    update() {\n      this.draw();\n      this.attackBox.position.x = this.position.x + this.attackBox.offset.x;\n      this.attackBox.position.y = this.position.y;\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n        this.velocity.y = 0;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n\n    attack() {\n      this.isAttacking = true;\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 100);\n    }\n\n  }\n\n  const player = new Sprite({\n    position: {\n      x: 0,\n      y: 0\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    offset: {\n      x: 0,\n      y: 0\n    }\n  });\n  const enemy = new Sprite({\n    position: {\n      x: 900,\n      y: 100\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    offset: {\n      x: -50,\n      y: 0\n    },\n    color: 'blue'\n  });\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    }\n  };\n\n  function hitBox(_ref2) {\n    let {\n      rectangle1,\n      rectangle2\n    } = _ref2;\n    return rectangle1.attackBox.position.x + rectangle1.attackBox.width >= rectangle2.position.x && rectangle1.attackBox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackBox.position.y + rectangle1.attackBox.height >= rectangle2.position.y && rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height;\n  }\n\n  function animate() {\n    window.requestAnimationFrame(animate);\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    player.update();\n    enemy.update();\n    player.velocity.x = 0;\n    enemy.velocity.x = 0;\n\n    if (keys.a.pressed && player.lastKey === 'a') {\n      player.velocity.x = -1;\n    } else if (keys.d.pressed && player.lastKey === 'd') {\n      player.velocity.x = 1;\n    }\n\n    if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n      enemy.velocity.x = -1;\n    } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n      enemy.velocity.x = 1;\n    }\n\n    if (hitBox({\n      rectangle1: player,\n      rectangle2: enemy\n    }) && player.isAttacking) {\n      player.isAttacking = false;\n    }\n\n    if (hitBox({\n      rectangle1: enemy,\n      rectangle2: player\n    }) && enemy.isAttacking) {\n      enemy.isAttacking = false;\n    }\n  }\n\n  animate();\n  window.addEventListener('keyup', event => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = 0;\n        break;\n\n      case 'd':\n        keys.d.pressed = false;\n        break;\n\n      case 'a':\n        keys.a.pressed = false;\n        break;\n      //Enemy Keys\n\n      case 'ArrowUp':\n        enemy.velocity.y = 0;\n        break;\n\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = false;\n        break;\n\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n  window.addEventListener('keydown', event => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = -20;\n        break;\n\n      case 'd':\n        keys.d.pressed = true;\n        player.lastKey = 'd';\n        break;\n\n      case 'a':\n        keys.a.pressed = true;\n        player.lastKey = 'a';\n        break;\n\n      case ' ':\n        player.attack();\n        break;\n      //Enemy Keys\n\n      case 'ArrowUp':\n        enemy.velocity.y = -20;\n        break;\n\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = true;\n        enemy.lastKey = 'ArrowRight';\n        break;\n\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = true;\n        enemy.lastKey = 'ArrowLeft';\n        break;\n\n      case 'l':\n        enemy.attack();\n        break;\n\n      default:\n        break;\n    }\n  }); //////////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            display: \"flex\",\n            width: \"100%\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"yellow\",\n              height: \"30px\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"red\",\n              height: \"100px\",\n              width: \"100px\",\n              flexShrink: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"yellow\",\n              height: \"30px\",\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <>\n  //   <Router>\n  //     <Routes>\n  //       <Route path=\"/\" element={<Battle/>} />\n  //     </Routes>\n  //   </Router>\n  // </>\n  ;\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chris/fighting-game/src/App.js"],"names":["App","canvas","document","querySelector","context","getContext","width","height","fillRect","gravity","Sprite","constructor","position","velocity","color","offset","lastKey","attackBox","x","y","isAttacking","draw","fillStyle","update","attack","setTimeout","player","enemy","keys","a","pressed","d","ArrowLeft","ArrowRight","hitBox","rectangle1","rectangle2","animate","window","requestAnimationFrame","addEventListener","event","key","display","alignItems","backgroundColor","flexShrink"],"mappings":"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","sourcesContent":["\n\nfunction App() {\n\n  const canvas = document.querySelector('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = 1858;\n  canvas.height = 576;\n\n  context.fillRect(0, 0, 1024, 576);\n\n  const gravity = 0.7;\n\n  class Sprite {\n    constructor({ position, velocity, color = 'red', offset }) {\n      this.position = position;\n      this.velocity = velocity;\n      this.width = 50;\n      this.height = 150;\n      this.lastKey = \"\";\n      this.attackBox = {\n        position: {\n          x: this.position.x,\n          y: this.position.y\n        },\n        offset,\n        width: 100,\n        height: 50,\n      }\n      this.color = color;\n      this.isAttacking = '';\n    }\n\n    draw() {\n      context.fillStyle = this.color;\n      context.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n      //attack box\n      if (this.isAttacking) {\n\n\n        context.fillStyle = 'purple';\n        context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n      }\n    }\n\n    update() {\n      this.draw();\n      this.attackBox.position.x = this.position.x + this.attackBox.offset.x;\n      this.attackBox.position.y = this.position.y;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n        this.velocity.y = 0;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n\n    attack() {\n      this.isAttacking = true;\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 100)\n    }\n  }\n\n  const player = new Sprite({\n    position: {\n      x: 0,\n      y: 0\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    offset: {\n      x: 0,\n      y: 0\n    }\n  });\n\n\n  const enemy = new Sprite({\n    position: {\n      x: 900,\n      y: 100\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    offset: {\n      x: -50,\n      y: 0\n    },\n    color: 'blue'\n  });\n\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    }\n  }\n\n  function hitBox({ rectangle1, rectangle2 }) {\n    return (\n      rectangle1.attackBox.position.x + rectangle1.attackBox.width >= rectangle2.position.x && rectangle1.attackBox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackBox.position.y + rectangle1.attackBox.height >= rectangle2.position.y && rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\n    )\n  }\n\n  function animate() {\n    window.requestAnimationFrame(animate);\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    player.update();\n    enemy.update();\n\n    player.velocity.x = 0;\n    enemy.velocity.x = 0;\n\n    if (keys.a.pressed && player.lastKey === 'a') {\n      player.velocity.x = -1;\n    } else if (keys.d.pressed && player.lastKey === 'd') {\n      player.velocity.x = 1;\n    }\n\n    if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n      enemy.velocity.x = -1;\n    } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n      enemy.velocity.x = 1;\n    }\n\n    if (hitBox({ rectangle1: player, rectangle2: enemy }) && player.isAttacking) {\n      player.isAttacking = false;\n    }\n\n    if (hitBox({ rectangle1: enemy, rectangle2: player }) && enemy.isAttacking) {\n      enemy.isAttacking = false;\n    }\n  }\n\n  animate();\n\n  window.addEventListener('keyup', (event) => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = 0;\n        break;\n      case 'd':\n        keys.d.pressed = false;\n        break;\n      case 'a':\n        keys.a.pressed = false;\n        break;\n\n      //Enemy Keys\n      case 'ArrowUp':\n        enemy.velocity.y = 0\n        break;\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = false;\n        break;\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = false;\n        break;\n      default:\n        break;\n    }\n  })\n\n  window.addEventListener('keydown', (event) => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = -20\n        break;\n      case 'd':\n        keys.d.pressed = true;\n        player.lastKey = 'd';\n        break;\n      case 'a':\n        keys.a.pressed = true;\n        player.lastKey = 'a';\n        break;\n      case ' ':\n        player.attack();\n        break;\n\n      //Enemy Keys\n      case 'ArrowUp':\n        enemy.velocity.y = -20\n        break;\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = true;\n        enemy.lastKey = 'ArrowRight';\n        break;\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = true;\n        enemy.lastKey = 'ArrowLeft';\n        break;\n      case 'l':\n        enemy.attack();\n        break;\n      default:\n        break;\n    }\n  })\n\n//////////////////////////////////////////////////////////////\n\n  return (\n    <>\n      <body>\n        <div style={{position: \"relative\"}}>\n          <div style={{position: \"absolute\", display: \"flex\", width: \"100%\", alignItems: \"center\"}}>\n            {/* player health */}\n            <div style={{backgroundColor: \"yellow\", height: \"30px\", width: \"100%\"}}></div>\n            {/* timer */}\n            <div style={{backgroundColor: \"red\", height: \"100px\", width: \"100px\", flexShrink: \"0\"}}></div>\n            {/* enemy health */}\n            <div style={{backgroundColor: \"yellow\", height: \"30px\", width: \"100%\"}}></div>\n            </div>\n            <canvas></canvas>\n        </div>\n      </body>\n    </>\n\n    // <>\n    //   <Router>\n    //     <Routes>\n    //       <Route path=\"/\" element={<Battle/>} />\n    //     </Routes>\n    //   </Router>\n    // </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}