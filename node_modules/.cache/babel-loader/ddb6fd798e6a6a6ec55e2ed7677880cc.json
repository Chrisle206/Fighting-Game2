{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\fighting-game\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const canvas = document.querySelector('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = 1024;\n  canvas.height = 576;\n  context.fillRect(0, 0, 1024, 576);\n  const gravity = 0.7;\n\n  class Sprite {\n    constructor(_ref) {\n      let {\n        position,\n        velocity,\n        color = 'red',\n        offset\n      } = _ref;\n      this.position = position;\n      this.velocity = velocity;\n      this.width = 50;\n      this.height = 150;\n      this.lastKey = \"\";\n      this.attackBox = {\n        position: {\n          x: this.position.x,\n          y: this.position.y\n        },\n        offset,\n        width: 100,\n        height: 50\n      };\n      this.color = color;\n      this.isAttacking = '';\n    }\n\n    draw() {\n      context.fillStyle = this.color;\n      context.fillRect(this.position.x, this.position.y, this.width, this.height); //attack box\n\n      if (this.isAttacking) {\n        context.fillStyle = 'purple';\n        context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n      }\n    }\n\n    update() {\n      this.draw();\n      this.attackBox.position.x = this.position.x - this.attackBox.offset.x;\n      this.attackBox.position.y = this.position.y;\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n        this.velocity.y = 0;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n\n    attack() {\n      this.isAttacking = true;\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 100);\n    }\n\n  }\n\n  const player = new Sprite({\n    position: {\n      x: 0,\n      y: 0\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    }\n  });\n  const enemy = new Sprite({\n    position: {\n      x: 900,\n      y: 100\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    color: 'blue'\n  });\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    }\n  };\n\n  function animate() {\n    window.requestAnimationFrame(animate);\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    player.update();\n    enemy.update();\n    player.velocity.x = 0;\n    enemy.velocity.x = 0;\n\n    if (keys.a.pressed && player.lastKey === 'a') {\n      player.velocity.x = -1;\n    } else if (keys.d.pressed && player.lastKey === 'd') {\n      player.velocity.x = 1;\n    }\n\n    if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n      enemy.velocity.x = -1;\n    } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n      enemy.velocity.x = 1;\n    }\n\n    if (player.attackBox.position.x + player.attackBox.width >= enemy.position.x && player.attackBox.position.x <= enemy.position.x + enemy.width && player.attackBox.position.y + player.attackBox.height >= enemy.position.y && player.attackBox.position.y <= enemy.position.y + enemy.height && player.isAttacking) {\n      player.isAttacking = false;\n    }\n  }\n\n  animate();\n  window.addEventListener('keyup', event => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = 0;\n        break;\n\n      case 'd':\n        keys.d.pressed = false;\n        break;\n\n      case 'a':\n        keys.a.pressed = false;\n        break;\n      //Enemy Keys\n\n      case 'ArrowUp':\n        enemy.velocity.y = 0;\n        break;\n\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = false;\n        break;\n\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n  window.addEventListener('keydown', event => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = -20;\n        break;\n\n      case 'd':\n        keys.d.pressed = true;\n        player.lastKey = 'd';\n        break;\n\n      case 'a':\n        keys.a.pressed = true;\n        player.lastKey = 'a';\n        break;\n\n      case ' ':\n        player.attack();\n        break;\n      //Enemy Keys\n\n      case 'ArrowUp':\n        enemy.velocity.y = -20;\n        break;\n\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = true;\n        enemy.lastKey = 'ArrowRight';\n        break;\n\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = true;\n        enemy.lastKey = 'ArrowLeft';\n        break;\n\n      default:\n        break;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <>\n  //   <Router>\n  //     <Routes>\n  //       <Route path=\"/\" element={<Battle/>} />\n  //     </Routes>\n  //   </Router>\n  // </>\n  ;\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chris/fighting-game/src/App.js"],"names":["App","canvas","document","querySelector","context","getContext","width","height","fillRect","gravity","Sprite","constructor","position","velocity","color","offset","lastKey","attackBox","x","y","isAttacking","draw","fillStyle","update","attack","setTimeout","player","enemy","keys","a","pressed","d","ArrowLeft","ArrowRight","animate","window","requestAnimationFrame","addEventListener","event","key"],"mappings":"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","sourcesContent":["\n\nfunction App() {\n  const canvas = document.querySelector('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = 1024;\n  canvas.height = 576;\n\n  context.fillRect(0, 0, 1024, 576);\n\n  const gravity = 0.7;\n\n  class Sprite {\n    constructor({ position, velocity, color ='red', offset }) {\n      this.position = position;\n      this.velocity = velocity;\n      this.width = 50;\n      this.height = 150;\n      this.lastKey = \"\";\n      this.attackBox = {\n        position: {\n          x: this.position.x,\n          y: this.position.y\n        },\n        offset,\n        width: 100,\n        height: 50,\n      }\n      this.color = color;\n      this.isAttacking = '';\n    }\n\n    draw() {\n      context.fillStyle = this.color;\n      context.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n      //attack box\n      if(this.isAttacking) {\n\n      \n      context.fillStyle = 'purple';\n      context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n      }\n    }\n\n    update() {\n      this.draw();\n      this.attackBox.position.x = this.position.x - this.attackBox.offset.x;\n      this.attackBox.position.y = this.position.y;\n\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n        this.velocity.y = 0;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n\n    attack() {\n      this.isAttacking = true;\n      setTimeout(() => {\n        this.isAttacking = false;\n      }, 100)\n    }\n  }\n\n  const player = new Sprite({\n    position: {\n      x: 0,\n      y: 0\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    }\n  });\n\n\n  const enemy = new Sprite({\n    position: {\n      x: 900,\n      y: 100\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    },\n    color: 'blue'\n  });\n\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    ArrowLeft: {\n      pressed: false\n    },\n    ArrowRight: {\n      pressed: false\n    }\n  }\n\n\n  function animate() {\n    window.requestAnimationFrame(animate);\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    player.update();\n    enemy.update();\n\n    player.velocity.x = 0;\n    enemy.velocity.x = 0;\n\n    if (keys.a.pressed && player.lastKey === 'a') {\n      player.velocity.x = -1;\n    } else if (keys.d.pressed && player.lastKey === 'd') {\n      player.velocity.x = 1;\n    }\n    \n    if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n      enemy.velocity.x = -1;\n    } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n      enemy.velocity.x = 1;\n    }\n\n    if(player.attackBox.position.x + player.attackBox.width >= enemy.position.x && player.attackBox.position.x <= enemy.position.x + enemy.width && player.attackBox.position.y + player.attackBox.height >= enemy.position.y && player.attackBox.position.y <= enemy.position.y + enemy.height && player.isAttacking) {\n      player.isAttacking = false;\n    } \n  }\n\n  animate();\n\n  window.addEventListener('keyup', (event) => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = 0;\n        break;\n      case 'd':\n        keys.d.pressed = false;\n        break;\n      case 'a':\n        keys.a.pressed = false;\n        break;\n\n      //Enemy Keys\n      case 'ArrowUp':\n        enemy.velocity.y = 0\n        break;\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = false;\n        break;\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = false;\n        break;\n      default:\n        break;\n    }\n  })\n\n  window.addEventListener('keydown', (event) => {\n    switch (event.key) {\n      //Player Keys\n      case 'w':\n        player.velocity.y = -20\n        break;\n      case 'd':\n        keys.d.pressed = true;\n        player.lastKey = 'd';\n        break;\n      case 'a':\n        keys.a.pressed = true;\n        player.lastKey = 'a';\n        break;\n      case ' ':\n        player.attack();\n        break;\n\n      //Enemy Keys\n      case 'ArrowUp':\n        enemy.velocity.y = -20\n        break;\n      case 'ArrowRight':\n        keys.ArrowRight.pressed = true;\n        enemy.lastKey = 'ArrowRight';\n        break;\n      case 'ArrowLeft':\n        keys.ArrowLeft.pressed = true;\n        enemy.lastKey = 'ArrowLeft';\n        break;\n      default:\n        break;\n    }\n  })\n\n\n\n  return (\n    <>\n      <canvas></canvas>\n    </>\n\n    // <>\n    //   <Router>\n    //     <Routes>\n    //       <Route path=\"/\" element={<Battle/>} />\n    //     </Routes>\n    //   </Router>\n    // </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}