{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\fighting-game\\\\src\\\\pages\\\\index.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Battle() {\n  const canvas = document.querySelector('canvas');\n  const context = canvas.getContext('2d');\n  canvas.width = 1024;\n  canvas.height = 576;\n  context.fillRect(0, 0, 1024, 576);\n  const gravity = 0.2;\n\n  class Sprite {\n    constructor(_ref) {\n      let {\n        position,\n        velocity\n      } = _ref;\n      this.position = position;\n      this.velocity = velocity;\n      this.height = 150;\n    }\n\n    draw() {\n      context.fillStyle = 'red';\n      context.fillRect(this.position.x, this.position.y, 50, this.height);\n    }\n\n    update() {\n      this.draw();\n      this.position.x += this.velocity.x;\n      this.position.y += this.velocity.y;\n\n      if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n        this.velocity.y = 0;\n      } else {\n        this.velocity.y += gravity;\n      }\n    }\n\n  }\n\n  const player = new Sprite({\n    position: {\n      x: 0,\n      y: 0\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    }\n  });\n  const enemy = new Sprite({\n    position: {\n      x: 900,\n      y: 100\n    },\n    velocity: {\n      x: 0,\n      y: 0\n    }\n  });\n  const keys = {\n    a: {\n      pressed: false\n    },\n    d: {\n      pressed: false\n    },\n    w: {\n      pressed: false\n    }\n  };\n  let lastKey;\n\n  function animate() {\n    window.requestAnimationFrame(animate);\n    context.fillStyle = 'black';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    player.update();\n    enemy.update();\n    player.velocity.x = 0;\n\n    if (keys.a.pressed) {\n      player.velocity.x = -1;\n    } else if (keys.d.pressed) {\n      player.velocity.x = 1;\n    } else if (keys.w.pressed) {\n      player.velocity.y = -1;\n    }\n  }\n\n  animate();\n  window.addEventListener('keyup', event => {\n    switch (event.key) {\n      case 'w':\n        keys.pressed = false;\n        break;\n\n      case 'd':\n        keys.d.pressed = false;\n        break;\n\n      case 'a':\n        keys.a.pressed = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n  window.addEventListener('keydown', event => {\n    switch (event.key) {\n      case 'w':\n        keys.w.pressed = true;\n        break;\n\n      case 'd':\n        keys.d.pressed = true;\n        lastKey = 'd';\n        break;\n\n      case 'a':\n        keys.a.pressed = true;\n        lastKey = 'a';\n        break;\n\n      default:\n        break;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Start!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Battle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Battle\");","map":{"version":3,"sources":["C:/Users/chris/fighting-game/src/pages/index.js"],"names":["React","Battle","canvas","document","querySelector","context","getContext","width","height","fillRect","gravity","Sprite","constructor","position","velocity","draw","fillStyle","x","y","update","player","enemy","keys","a","pressed","d","w","lastKey","animate","window","requestAnimationFrame","addEventListener","event","key"],"mappings":"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","sourcesContent":["import React from 'react';\r\nexport default function Battle() {\r\n    const canvas = document.querySelector('canvas');\r\n    const context = canvas.getContext('2d');\r\n    canvas.width = 1024;\r\n    canvas.height = 576;\r\n\r\n    context.fillRect(0, 0, 1024, 576);\r\n\r\n    const gravity = 0.2;\r\n\r\n    class Sprite {\r\n        constructor({ position, velocity }) {\r\n            this.position = position;\r\n            this.velocity = velocity;\r\n            this.height = 150;\r\n        }\r\n\r\n        draw() {\r\n            context.fillStyle = 'red';\r\n            context.fillRect(this.position.x, this.position.y, 50, this.height);\r\n        }\r\n\r\n        update() {\r\n            this.draw();\r\n            this.position.x += this.velocity.x;\r\n            this.position.y += this.velocity.y;\r\n\r\n            if(this.position.y + this.height + this.velocity.y >= canvas.height) {\r\n                this.velocity.y = 0;\r\n            } else {\r\n                this.velocity.y += gravity;\r\n            }\r\n        }\r\n    }\r\n\r\n    const player = new Sprite({\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        velocity: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    });\r\n\r\n\r\n    const enemy = new Sprite({\r\n        position: {\r\n            x: 900,\r\n            y: 100\r\n        },\r\n        velocity: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    });\r\n\r\n    const keys = {\r\n        a: {\r\n            pressed: false\r\n        },\r\n        d: {\r\n            pressed: false\r\n        },\r\n        w: {\r\n            pressed:false\r\n        }\r\n    }\r\n\r\n    let lastKey;\r\n\r\n    function animate() {\r\n        window.requestAnimationFrame(animate);\r\n        context.fillStyle = 'black';\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        player.update();\r\n        enemy.update();\r\n\r\n        player.velocity.x = 0;\r\n        if(keys.a.pressed) {\r\n            player.velocity.x = -1;\r\n        } else if(keys.d.pressed) {\r\n            player.velocity.x = 1;\r\n        } else if(keys.w.pressed) {\r\n            player.velocity.y = -1;\r\n        }\r\n    }\r\n\r\n    animate();\r\n\r\n    window.addEventListener('keyup', (event) => {\r\n        switch(event.key) {\r\n            case 'w': \r\n            keys.pressed = false;\r\n            break;\r\n            case 'd': \r\n            keys.d.pressed = false;\r\n            break;\r\n            case 'a': \r\n            keys.a.pressed = false;\r\n            break;\r\n            default: \r\n            break;\r\n        }\r\n    })\r\n\r\n    window.addEventListener('keydown', (event) => {\r\n        switch(event.key) {\r\n            case 'w': \r\n            keys.w.pressed = true;\r\n            break;\r\n            case 'd': \r\n            keys.d.pressed = true;\r\n            lastKey = 'd';\r\n            break;\r\n            case 'a': \r\n            keys.a.pressed = true;\r\n            lastKey = 'a';\r\n            break;\r\n            default: \r\n            break;\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <canvas></canvas>\r\n            <button>Start!</button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}