{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\fighting-game\\\\src\\\\App.js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Battle from \"./pages/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const canvas = document.querySelector('canvas');\n  // const context = canvas.getContext('2d');\n  // canvas.width = 1024;\n  // canvas.height = 576;\n  // context.fillRect(0, 0, 1024, 576);\n  // const gravity = 0.2;\n  // class Sprite {\n  //   constructor({ position, velocity }) {\n  //     this.position = position;\n  //     this.velocity = velocity;\n  //     this.height = 150;\n  //     this.lastKey = \"\";\n  //   }\n  //   draw() {\n  //     context.fillStyle = 'red';\n  //     context.fillRect(this.position.x, this.position.y, 50, this.height);\n  //   }\n  //   update() {\n  //     this.draw();\n  //     this.position.x += this.velocity.x;\n  //     this.position.y += this.velocity.y;\n  //     if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n  //       this.velocity.y = 0;\n  //     } else {\n  //       this.velocity.y += gravity;\n  //     }\n  //   }\n  // }\n  // const player = new Sprite({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n  // const enemy = new Sprite({\n  //   position: {\n  //     x: 900,\n  //     y: 100\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n  // const keys = {\n  //   a: {\n  //     pressed: false\n  //   },\n  //   d: {\n  //     pressed: false\n  //   },\n  //   ArrowLeft: {\n  //     pressed: false\n  //   },\n  //   ArrowRight: {\n  //     pressed: false\n  //   }\n  // }\n  // let lastKey;\n  // function animate() {\n  //   window.requestAnimationFrame(animate);\n  //   context.fillStyle = 'black';\n  //   context.fillRect(0, 0, canvas.width, canvas.height);\n  //   player.update();\n  //   enemy.update();\n  //   player.velocity.x = 0;\n  //   if (keys.a.pressed && lastKey === 'a') {\n  //     player.velocity.x = -1;\n  //   } else if (keys.d.pressed && lastKey === 'd') {\n  //     player.velocity.x = 1;\n  //   } else if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n  //     enemy.velocity.x = -1;\n  //   } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n  //     enemy.velocity.x = 1;\n  //   }\n  // }\n  // animate();\n  // window.addEventListener('keyup', (event) => {\n  //   switch (event.key) {\n  //     case 'w':\n  //       player.velocity.y = 0;\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = false;\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = false;\n  //       break;\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = 0\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = false;\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = false;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n  // window.addEventListener('keydown', (event) => {\n  //   switch (event.key) {\n  //     case 'w':\n  //       player.velocity.y = -5\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = true;\n  //       lastKey = 'd';\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = true;\n  //       lastKey = 'a';\n  //       break;\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = -5\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = true;\n  //       enemy.lastKey = 'ArrowRight';\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = true;\n  //       enemy.lastKey = 'ArrowLeft';\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <>\n  //   <Router>\n  //     <Routes>\n  //       <Route path=\"/\" element={<Battle/>} />\n  //     </Routes>\n  //   </Router>\n  // </>\n  ;\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chris/fighting-game/src/App.js"],"names":["BrowserRouter","Router","Routes","Route","Battle","App"],"mappings":";AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;;;AAGA,SAASC,GAAT,GAAe;AACbsBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AADF,mBADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AAXF;AAaD;;KAzKQA,G;AA2KT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Battle from \"./pages/index.js\";\n\n\nfunction App() {\n  // const canvas = document.querySelector('canvas');\n  // const context = canvas.getContext('2d');\n  // canvas.width = 1024;\n  // canvas.height = 576;\n\n  // context.fillRect(0, 0, 1024, 576);\n\n  // const gravity = 0.2;\n\n  // class Sprite {\n  //   constructor({ position, velocity }) {\n  //     this.position = position;\n  //     this.velocity = velocity;\n  //     this.height = 150;\n  //     this.lastKey = \"\";\n  //   }\n\n  //   draw() {\n  //     context.fillStyle = 'red';\n  //     context.fillRect(this.position.x, this.position.y, 50, this.height);\n  //   }\n\n  //   update() {\n  //     this.draw();\n  //     this.position.x += this.velocity.x;\n  //     this.position.y += this.velocity.y;\n\n  //     if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n  //       this.velocity.y = 0;\n  //     } else {\n  //       this.velocity.y += gravity;\n  //     }\n  //   }\n  // }\n\n  // const player = new Sprite({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n\n\n  // const enemy = new Sprite({\n  //   position: {\n  //     x: 900,\n  //     y: 100\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n\n  // const keys = {\n  //   a: {\n  //     pressed: false\n  //   },\n  //   d: {\n  //     pressed: false\n  //   },\n  //   ArrowLeft: {\n  //     pressed: false\n  //   },\n  //   ArrowRight: {\n  //     pressed: false\n  //   }\n  // }\n\n  // let lastKey;\n\n  // function animate() {\n  //   window.requestAnimationFrame(animate);\n  //   context.fillStyle = 'black';\n  //   context.fillRect(0, 0, canvas.width, canvas.height);\n  //   player.update();\n  //   enemy.update();\n\n  //   player.velocity.x = 0;\n\n  //   if (keys.a.pressed && lastKey === 'a') {\n  //     player.velocity.x = -1;\n  //   } else if (keys.d.pressed && lastKey === 'd') {\n  //     player.velocity.x = 1;\n  //   } else if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n  //     enemy.velocity.x = -1;\n  //   } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n  //     enemy.velocity.x = 1;\n  //   }\n  // }\n\n  // animate();\n\n  // window.addEventListener('keyup', (event) => {\n  //   switch (event.key) {\n  //     case 'w':\n  //       player.velocity.y = 0;\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = false;\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = false;\n  //       break;\n\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = 0\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = false;\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = false;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n\n  // window.addEventListener('keydown', (event) => {\n  //   switch (event.key) {\n  //     case 'w':\n  //       player.velocity.y = -5\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = true;\n  //       lastKey = 'd';\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = true;\n  //       lastKey = 'a';\n  //       break;\n\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = -5\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = true;\n  //       enemy.lastKey = 'ArrowRight';\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = true;\n  //       enemy.lastKey = 'ArrowLeft';\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n\n\n\n  return (\n    <>\n      <canvas></canvas>\n    </>\n\n    // <>\n    //   <Router>\n    //     <Routes>\n    //       <Route path=\"/\" element={<Battle/>} />\n    //     </Routes>\n    //   </Router>\n    // </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}