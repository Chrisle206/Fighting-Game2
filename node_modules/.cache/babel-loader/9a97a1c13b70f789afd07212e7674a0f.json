{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\fighting-game\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const canvas = document.querySelector('canvas');\n  // const context = canvas.getContext('2d');\n  // canvas.width = 1024;\n  // canvas.height = 576;\n  // context.fillRect(0, 0, 1024, 576);\n  // const gravity = 0.7;\n  // class Sprite {\n  //   constructor({ position, imageSrc }) {\n  //     this.position = position;\n  //     this.width = 50;\n  //     this.height = 150;\n  //     this.image = new Image();\n  //     this.image.src = imageSrc;\n  //     }\n  //   draw() {\n  //     context.drawImage(this.image, this.position.x, this.position.y);\n  //   }\n  //   update() {\n  //     this.draw();\n  //   }\n  // }\n  // class Fighter {\n  //   constructor({ position, velocity, color = 'red', offset }) {\n  //     this.position = position;\n  //     this.velocity = velocity;\n  //     this.width = 50;\n  //     this.height = 150;\n  //     this.lastKey = \"\";\n  //     this.attackBox = {\n  //       position: {\n  //         x: this.position.x,\n  //         y: this.position.y\n  //       },\n  //       offset: offset,\n  //       width: 100,\n  //       height: 50,\n  //     }\n  //     this.color = color;\n  //     this.isAttacking = '';\n  //     this.health = 100;\n  //   }\n  //   draw() {\n  //     context.fillStyle = this.color;\n  //     context.fillRect(this.position.x, this.position.y, this.width, this.height);\n  //     //attack box\n  //     if (this.isAttacking) {\n  //       context.fillStyle = 'purple';\n  //       context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n  //     }\n  //   }\n  //   update() {\n  //     this.draw();\n  //     this.attackBox.position.x = this.position.x + this.attackBox.offset.x;\n  //     this.attackBox.position.y = this.position.y;\n  //     this.position.x += this.velocity.x;\n  //     this.position.y += this.velocity.y;\n  //     if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n  //       this.velocity.y = 0;\n  //     } else {\n  //       this.velocity.y += gravity;\n  //     }\n  //   }\n  //   attack() {\n  //     this.isAttacking = true;\n  //     setTimeout(() => {\n  //       this.isAttacking = false;\n  //     }, 100)\n  //   }\n  // }\n  // const background = new Sprite({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   imageSrc: './Assets/background.gif'\n  // })\n  // const player = new Fighter({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   offset: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n  // const enemy = new Fighter({\n  //   position: {\n  //     x: 900,\n  //     y: 100\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   offset: {\n  //     x: -50,\n  //     y: 0\n  //   },\n  //   color: 'blue'\n  // });\n  // const keys = {\n  //   a: {\n  //     pressed: false\n  //   },\n  //   d: {\n  //     pressed: false\n  //   },\n  //   ArrowLeft: {\n  //     pressed: false\n  //   },\n  //   ArrowRight: {\n  //     pressed: false\n  //   }\n  // }\n  // function hitBox({ rectangle1, rectangle2 }) {\n  //   return (\n  //     rectangle1.attackBox.position.x + rectangle1.attackBox.width >= rectangle2.position.x && rectangle1.attackBox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackBox.position.y + rectangle1.attackBox.height >= rectangle2.position.y && rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\n  //   )\n  // }\n  // function animate() {\n  //   window.requestAnimationFrame(animate);\n  //   context.fillStyle = 'black';\n  //   context.fillRect(0, 0, canvas.width, canvas.height);\n  //   background.update();\n  //   player.update();\n  //   enemy.update();\n  //   player.velocity.x = 0;\n  //   enemy.velocity.x = 0;\n  //   if (keys.a.pressed && player.lastKey === 'a') {\n  //     player.velocity.x = -1;\n  //   } else if (keys.d.pressed && player.lastKey === 'd') {\n  //     player.velocity.x = 1;\n  //   }\n  //   if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n  //     enemy.velocity.x = -1;\n  //   } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n  //     enemy.velocity.x = 1;\n  //   }\n  //   if (hitBox({ rectangle1: player, rectangle2: enemy }) && player.isAttacking) {\n  //     player.isAttacking = false;\n  //     enemy.health -= 20;\n  //     document.querySelector('#enemyHealth').style.width = enemy.health + '%';\n  //   }\n  //   if (hitBox({ rectangle1: enemy, rectangle2: player }) && enemy.isAttacking) {\n  //     enemy.isAttacking = false;\n  //     player.health -= 20;\n  //     document.querySelector('#playerHealth').style.width = player.health + '%';\n  //   }\n  //   if (enemy.health <= 0 || player.health <= 0) {\n  //     determineWinner({ player, enemy, timerId });\n  //   }\n  // }\n  // function determineWinner({ player, enemy, timerId }) {\n  //   clearTimeout(timerId);\n  //   document.querySelector('#draw').style.display = \"flex\";\n  //   if (player.health === enemy.health) {\n  //     document.querySelector('#draw').innerHTML = \"Draw!\";\n  //   } else if (player.health > enemy.health) {\n  //     document.querySelector('#draw').innerHTML = \"Player 1 Wins!\";\n  //   } else {\n  //     document.querySelector('#draw').innerHTML = \"Player 2 Wins!\";\n  //   }\n  // }\n  // let timer = 60;\n  // let timerId;\n  // function decreaseTimer() {\n  //   if (timer > 0) {\n  //    timerId = setTimeout(decreaseTimer, 1000);\n  //     timer--;\n  //     document.querySelector('#timer').innerHTML = timer;\n  //   }\n  //   if (timer === 0) {\n  //     determineWinner({ player, enemy });\n  //   }\n  // }\n  // decreaseTimer();\n  // animate();\n  // window.addEventListener('keyup', (event) => {\n  //   switch (event.key) {\n  //     //Player Keys\n  //     case 'w':\n  //       player.velocity.y = 0;\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = false;\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = false;\n  //       break;\n  //     //Enemy Keys\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = 0\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = false;\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = false;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n  // window.addEventListener('keydown', (event) => {\n  //   switch (event.key) {\n  //     //Player Keys\n  //     case 'w':\n  //       player.velocity.y = -20\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = true;\n  //       player.lastKey = 'd';\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = true;\n  //       player.lastKey = 'a';\n  //       break;\n  //     case ' ':\n  //       player.attack();\n  //       break;\n  //     //Enemy Keys\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = -20\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = true;\n  //       enemy.lastKey = 'ArrowRight';\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = true;\n  //       enemy.lastKey = 'ArrowLeft';\n  //       break;\n  //     case 'l':\n  //       enemy.attack();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n  //////////////////////////////////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            display: \"flex\",\n            width: \"100%\",\n            alignItems: \"center\",\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\",\n              height: \"30px\",\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"flex-end\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"yellow\",\n                height: \"30px\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"playerHealth\",\n              style: {\n                position: \"absolute\",\n                background: \"blue\",\n                top: \"0\",\n                right: \"0\",\n                bottom: \"0\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"timer\",\n            style: {\n              backgroundColor: \"red\",\n              height: \"100px\",\n              width: \"100px\",\n              flexShrink: \"0\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"relative\",\n              height: \"30px\",\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"yellow\",\n                height: \"30px\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"enemyHealth\",\n              style: {\n                position: \"absolute\",\n                background: \"green\",\n                top: '0',\n                right: \"0\",\n                bottom: \"0\",\n                left: '0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"draw\",\n          style: {\n            position: \"absolute\",\n            color: \"white\",\n            display: \"none\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            top: '0',\n            right: '0',\n            bottom: \"0\",\n            left: '0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/chris/fighting-game/src/App.js"],"names":["App","position","display","width","alignItems","padding","height","justifyContent","backgroundColor","background","top","right","bottom","flexShrink","left","color"],"mappings":"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","sourcesContent":["\nimport \"./App.css\";\n\nfunction App() {\n\n  // const canvas = document.querySelector('canvas');\n  // const context = canvas.getContext('2d');\n  // canvas.width = 1024;\n  // canvas.height = 576;\n\n  // context.fillRect(0, 0, 1024, 576);\n\n  // const gravity = 0.7;\n\n  // class Sprite {\n  //   constructor({ position, imageSrc }) {\n  //     this.position = position;\n  //     this.width = 50;\n  //     this.height = 150;\n  //     this.image = new Image();\n  //     this.image.src = imageSrc;\n  //     }\n\n  //   draw() {\n  //     context.drawImage(this.image, this.position.x, this.position.y);\n  //   }\n\n  //   update() {\n  //     this.draw();\n  //   }\n  // }\n\n  // class Fighter {\n  //   constructor({ position, velocity, color = 'red', offset }) {\n  //     this.position = position;\n  //     this.velocity = velocity;\n  //     this.width = 50;\n  //     this.height = 150;\n  //     this.lastKey = \"\";\n  //     this.attackBox = {\n  //       position: {\n  //         x: this.position.x,\n  //         y: this.position.y\n  //       },\n  //       offset: offset,\n  //       width: 100,\n  //       height: 50,\n  //     }\n  //     this.color = color;\n  //     this.isAttacking = '';\n  //     this.health = 100;\n  //   }\n\n  //   draw() {\n  //     context.fillStyle = this.color;\n  //     context.fillRect(this.position.x, this.position.y, this.width, this.height);\n\n  //     //attack box\n  //     if (this.isAttacking) {\n  //       context.fillStyle = 'purple';\n  //       context.fillRect(this.attackBox.position.x, this.attackBox.position.y, this.attackBox.width, this.attackBox.height);\n  //     }\n  //   }\n\n  //   update() {\n  //     this.draw();\n  //     this.attackBox.position.x = this.position.x + this.attackBox.offset.x;\n  //     this.attackBox.position.y = this.position.y;\n\n  //     this.position.x += this.velocity.x;\n  //     this.position.y += this.velocity.y;\n\n  //     if (this.position.y + this.height + this.velocity.y >= canvas.height) {\n  //       this.velocity.y = 0;\n  //     } else {\n  //       this.velocity.y += gravity;\n  //     }\n  //   }\n\n  //   attack() {\n  //     this.isAttacking = true;\n  //     setTimeout(() => {\n  //       this.isAttacking = false;\n  //     }, 100)\n  //   }\n  // }\n\n  // const background = new Sprite({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   imageSrc: './Assets/background.gif'\n  // })\n\n  // const player = new Fighter({\n  //   position: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   offset: {\n  //     x: 0,\n  //     y: 0\n  //   }\n  // });\n\n\n  // const enemy = new Fighter({\n  //   position: {\n  //     x: 900,\n  //     y: 100\n  //   },\n  //   velocity: {\n  //     x: 0,\n  //     y: 0\n  //   },\n  //   offset: {\n  //     x: -50,\n  //     y: 0\n  //   },\n  //   color: 'blue'\n  // });\n\n  // const keys = {\n  //   a: {\n  //     pressed: false\n  //   },\n  //   d: {\n  //     pressed: false\n  //   },\n  //   ArrowLeft: {\n  //     pressed: false\n  //   },\n  //   ArrowRight: {\n  //     pressed: false\n  //   }\n  // }\n\n  // function hitBox({ rectangle1, rectangle2 }) {\n  //   return (\n  //     rectangle1.attackBox.position.x + rectangle1.attackBox.width >= rectangle2.position.x && rectangle1.attackBox.position.x <= rectangle2.position.x + rectangle2.width && rectangle1.attackBox.position.y + rectangle1.attackBox.height >= rectangle2.position.y && rectangle1.attackBox.position.y <= rectangle2.position.y + rectangle2.height\n  //   )\n  // }\n\n  // function animate() {\n  //   window.requestAnimationFrame(animate);\n  //   context.fillStyle = 'black';\n  //   context.fillRect(0, 0, canvas.width, canvas.height);\n  //   background.update();\n  //   player.update();\n  //   enemy.update();\n\n  //   player.velocity.x = 0;\n  //   enemy.velocity.x = 0;\n\n  //   if (keys.a.pressed && player.lastKey === 'a') {\n  //     player.velocity.x = -1;\n  //   } else if (keys.d.pressed && player.lastKey === 'd') {\n  //     player.velocity.x = 1;\n  //   }\n\n  //   if (keys.ArrowLeft.pressed && enemy.lastKey === 'ArrowLeft') {\n  //     enemy.velocity.x = -1;\n  //   } else if (keys.ArrowRight.pressed && enemy.lastKey === 'ArrowRight') {\n  //     enemy.velocity.x = 1;\n  //   }\n\n  //   if (hitBox({ rectangle1: player, rectangle2: enemy }) && player.isAttacking) {\n  //     player.isAttacking = false;\n  //     enemy.health -= 20;\n  //     document.querySelector('#enemyHealth').style.width = enemy.health + '%';\n  //   }\n\n  //   if (hitBox({ rectangle1: enemy, rectangle2: player }) && enemy.isAttacking) {\n  //     enemy.isAttacking = false;\n  //     player.health -= 20;\n  //     document.querySelector('#playerHealth').style.width = player.health + '%';\n  //   }\n\n  //   if (enemy.health <= 0 || player.health <= 0) {\n  //     determineWinner({ player, enemy, timerId });\n  //   }\n  // }\n\n  // function determineWinner({ player, enemy, timerId }) {\n  //   clearTimeout(timerId);\n  //   document.querySelector('#draw').style.display = \"flex\";\n  //   if (player.health === enemy.health) {\n  //     document.querySelector('#draw').innerHTML = \"Draw!\";\n\n  //   } else if (player.health > enemy.health) {\n  //     document.querySelector('#draw').innerHTML = \"Player 1 Wins!\";\n\n  //   } else {\n  //     document.querySelector('#draw').innerHTML = \"Player 2 Wins!\";\n\n  //   }\n  // }\n\n  // let timer = 60;\n  // let timerId;\n  // function decreaseTimer() {\n\n  //   if (timer > 0) {\n  //    timerId = setTimeout(decreaseTimer, 1000);\n  //     timer--;\n  //     document.querySelector('#timer').innerHTML = timer;\n  //   }\n\n  //   if (timer === 0) {\n  //     determineWinner({ player, enemy });\n  //   }\n  // }\n\n  // decreaseTimer();\n  // animate();\n\n  // window.addEventListener('keyup', (event) => {\n  //   switch (event.key) {\n  //     //Player Keys\n  //     case 'w':\n  //       player.velocity.y = 0;\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = false;\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = false;\n  //       break;\n\n  //     //Enemy Keys\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = 0\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = false;\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = false;\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n\n  // window.addEventListener('keydown', (event) => {\n  //   switch (event.key) {\n  //     //Player Keys\n  //     case 'w':\n  //       player.velocity.y = -20\n  //       break;\n  //     case 'd':\n  //       keys.d.pressed = true;\n  //       player.lastKey = 'd';\n  //       break;\n  //     case 'a':\n  //       keys.a.pressed = true;\n  //       player.lastKey = 'a';\n  //       break;\n  //     case ' ':\n  //       player.attack();\n  //       break;\n\n  //     //Enemy Keys\n  //     case 'ArrowUp':\n  //       enemy.velocity.y = -20\n  //       break;\n  //     case 'ArrowRight':\n  //       keys.ArrowRight.pressed = true;\n  //       enemy.lastKey = 'ArrowRight';\n  //       break;\n  //     case 'ArrowLeft':\n  //       keys.ArrowLeft.pressed = true;\n  //       enemy.lastKey = 'ArrowLeft';\n  //       break;\n  //     case 'l':\n  //       enemy.attack();\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  // })\n\n  //////////////////////////////////////////////////////////////\n\n  return (\n    <>\n      <body>\n        <div style={{ position: \"relative\", display: \"inline-block\" }}>\n          <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", alignItems: \"center\", padding: \"20px\" }}>\n            {/* player health */}\n            <div style={{ position: \"relative\", height: \"30px\", width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\n              <div style={{ backgroundColor: \"yellow\", height: \"30px\", width: \"100%\" }}></div>\n              <div id=\"playerHealth\" style={{ position: \"absolute\", background: \"blue\", top: \"0\", right: \"0\", bottom: \"0\", width: \"100%\" }}></div>\n            </div>\n            {/* timer */}\n            <div id=\"timer\" style={{ backgroundColor: \"red\", height: \"100px\", width: \"100px\", flexShrink: \"0\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>10</div>\n            {/* enemy health */}\n            <div style={{ position: \"relative\", height: \"30px\", width: \"100%\" }}>\n              <div style={{ backgroundColor: \"yellow\", height: \"30px\", width: \"100%\" }}></div>\n              <div id=\"enemyHealth\" style={{ position: \"absolute\", background: \"green\", top: '0', right: \"0\", bottom: \"0\", left: '0' }}></div>\n            </div>\n            <div></div>\n          </div>\n          <div id=\"draw\" style={{ position: \"absolute\", color: \"white\", display: \"none\", justifyContent: \"center\", alignItems: \"center\", top: '0', right: '0', bottom: \"0\", left: '0' }}></div>\n          <canvas></canvas>\n        </div>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}